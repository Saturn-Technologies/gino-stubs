- case: test_create
  main: |
    from typing import TYPE_CHECKING, Any
    from gino import Gino
    from gino.crud import CRUDModel
    from datetime import datetime

    db = Gino()

    if TYPE_CHECKING:
        Base = CRUDModel
    else:
        Base = db.Model

    class Model(Base):
        __tablename__ = 'model'

        id = db.Column(db.Integer(), primary_key=True)
        name = db.Column(db.String(), nullable=False)
        created_at = db.Column(db.DateTime())

    async def main() -> None:
        model = await Model.create()
        reveal_type(model)  # N: Revealed type is 'main.Model*'
        reveal_type(model.id)  # N: Revealed type is 'builtins.int*'
        reveal_type(model.name)  # N: Revealed type is 'builtins.str*'
        reveal_type(model.created_at)  # N: Revealed type is 'Union[datetime.datetime*, None]'

        model = Model()
        model.created_at = datetime.now()
        await model.create()

- case: test_retrieve
  main: |
    from typing import TYPE_CHECKING, Any
    from gino import Gino
    from gino.crud import CRUDModel
    from datetime import datetime

    db = Gino()

    if TYPE_CHECKING:
        Base = CRUDModel
    else:
        Base = db.Model

    class Model(Base):
        __tablename__ = 'model'

        id = db.Column(db.Integer(), primary_key=True)
        created_at = db.Column(db.DateTime())
        title = db.Column(db.String())
        text = db.Column(db.Text())

    async def main() -> None:
        one = await Model.get(1)
        reveal_type(one)  # N: Revealed type is 'Union[main.Model*, None]'

        all = await Model.query.where(db.func.to_tsvector('english', Model.title + db.text("' '") + Model.text)
                                      .match('foo')).gino.all()
        reveal_type(all)  # N: Revealed type is 'builtins.list*[main.Model*]'

        first = await Model.query.gino.first()
        reveal_type(first)  # N: Revealed type is 'Union[main.Model*, None]'

        async with db.transaction():
            async for model in Model.query.gino.iterate():
                reveal_type(model)  # N: Revealed type is 'main.Model*'
